#ifndef AOC24_BUILD_TESTS_INPUTS_HPP // NOLINT
#define AOC24_BUILD_TESTS_INPUTS_HPP

#include <string_view>

namespace inputs::day1 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY1_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY1_EXAMPLE@)";
}
namespace inputs::day2 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY2_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY2_EXAMPLE@)";
}

namespace inputs::day3 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY3_INPUT@)";
}

namespace inputs::day4 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY4_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY4_EXAMPLE@)";
}
namespace inputs::day5 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY5_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY5_EXAMPLE@)";
}
namespace inputs::day6 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY6_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY6_EXAMPLE@)";
}
namespace inputs::day7 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY7_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY7_EXAMPLE@)";
}
namespace inputs::day8 {
constexpr std::string_view INPUT = R"(@INPUTS_DAY8_INPUT@)";
constexpr std::string_view EXAMPLE = R"(@INPUTS_DAY8_EXAMPLE@)";
}
#endif